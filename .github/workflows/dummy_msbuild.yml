name: Dummy_MSBuild

on: 
  push:
    paths:
    - '/dummy/**'
env:
   # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./dummy/msvscpp/

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest
    defaults:
       run:
         shell: powershell
         
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build Release x86
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
        msbuild ${{env.SOLUTION_FILE_PATH}} /m /property:Configuration=Release /property:Platform=x86
        Copy-Item \dummy\msvscpp\msvscpp\Release\xHPTDC8_dummy.dll -Destination \lib\x86
        Copy-Item \dummy\msvscpp\msvscpp\Release\xHPTDC8_dummy.lib -Destination \lib\x86
        Remove-Item -Path \dummy\msvscpp\msvscpp\Release -Recurse
      
      
      
